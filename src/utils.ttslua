function len(obj)
    if type(obj) == "string" then
        return string.len(obj)
    elseif type(obj) == "table" then
        count = 0
        for _, _ in pairs(obj) do
            count = count + 1
        end
        return count
    end
end

function mergeTables(...)
    tables = {...}
    mergedTable = {}
    for _, currentTable in ipairs(tables) do
        for _, element in ipairs(currentTable) do
            table.insert(mergedTable, element)
        end
    end
    return mergedTable
end

-- From: http://lua-users.org/wiki/SimpleRound
-- Retrieved: 26 Apr 2020
function round(num, numDecimalPlaces)
    local mult = 10 ^ (numDecimalPlaces or 0)
    return math.floor(num * mult + 0.5) / mult
end

-- Because Lua doesn't have a built-in sleep for some reason.
function sleep(seconds)
    local clock = os.clock
    local startTime = clock()
    while clock() - startTime <= seconds do end
end

-- Retrieved from: https://gist.github.com/Uradamus/10323382#gistcomment-3149506
-- Retrieved on: 10 May 2020
function shuffle(t)
    local tbl = {}
    for i = 1, #t do
        tbl[i] = t[i]
    end
    for i = #tbl, 2, -1 do
        local j = math.random(i)
        tbl[i], tbl[j] = tbl[j], tbl[i]
    end
    return tbl
end


function sortedCardInsert(cardArray, newCard)
    for index = #cardArray, 1, -1 do
        local cardObj = cardArray[index]
        local cardNum = allPowerPlants[cardObj.guid].Number
        local nextCardNum = allPowerPlants[newCard.guid].Number
        if cardNum > nextCardNum then
            cardArray[index + 1] = cardObj
        else
            cardArray[index + 1] = newCard
            break
        end
    end
end
